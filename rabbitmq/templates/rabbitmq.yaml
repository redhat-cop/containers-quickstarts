apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: rabbitmq
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: rabbitmq
- descritpion: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  required: false
  value: rabbitmq
- description: Erlang version to use
  name: ERLANG_VERSION
  required: true
  value: 20.1.1
- description: Docker image to build from
  name: FROM_IMAGE
  required: false
  value: rhel7:7.4
- description: RabbitMQ Autocluster version to use
  name: RABBITMQ_AUTOCLUSTER_VERSION
  required: true
  value: 0.10.0
- description: RabbitMQ version to build
  name: RABBITMQ_VERSION
  required: true
  value: 3.6.12
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  required: false
  value: master
- description: Git source URI for application
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/redhat-cop/containers-quickstarts
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "rabbitmq:${RABBITMQ_VERSION}"
    source:
      contextDir: "${CONTEXT_DIR}"
      git:
        ref: "${SOURCE_REPOSITORY_REF}"
        uri: "${SOURCE_REPOSITORY_URL}"
      type: Git
    strategy:
      dockerStrategy:
        env:
        - name: ERLANG_VERSION
          value: "${ERLANG_VERSION}"
        - name: RABBITMQ_AUTOCLUSTER_VERSION
          value: "${RABBITMQ_AUTOCLUSTER_VERSION}"
        - name: RABBITMQ_VERSION
          value: "${RABBITMQ_VERSION}"
        forcePull: true
        from:
          kind: ImageStreamTag
          name: "${FROM_IMAGE}"
      type: Docker
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: centos
  spec:
    dockerImageRepository: docker.io/centos
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: docker.io/centos:7
      name: "7"
      referencePolicy:
        type: Source
    - from:
        kind: DockerImage
        name: docker.io/centos:latest
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    lookupPolicy:
      local: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: rhel7
  spec:
    dockerImageRepository: registry.access.redhat.com/rhel7/rhel
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/rhel7/rhel:7.4
      name: "7.4"
      referencePolicy:
        type: Source
    - from:
        kind: DockerImage
        name: registry.access.redhat.com/rhel7/rhel:latest
      name: latest
      referencePolicy:
        type: Source
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    clusterIP: None
    ports:
    - name: 4369-tcp
      port: 4369
      protocol: TCP
      targetPort: 4369
    - name: 5671-tcp
      port: 5671
      protocol: TCP
      targetPort: 5671
    - name: 5672-tcp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: 25672-tcp
      port: 25672
      protocol: TCP
      targetPort: 25672
    selector:
      application: "${APPLICATION_NAME}"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      application: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    replicas: 3
    selector:
      matchLabels:
        application: "${APPLICATION_NAME}"
    serviceName: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          application: "${APPLICATION_NAME}"
      spec:
        containers:
        - env:
          - name: AUTOCLUSTER_DELAY
            value: "10"
          - name: AUTOCLUSTER_TYPE
            value: k8s
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: RABBITMQ_ERLANG_COOKIE
            value: sup3rS3cr1+
          - name: RABBITMQ_NODENAME
            value: rabbit@$(MY_POD_IP)
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          image: "${APPLICATION_NAME}:${RABBITMQ_VERSION}"
          imagePullPolicy: Always
          name: "${APPLICATION_NAME}"
          ports:
          - containerPort: 25672
            protocol: TCP
          - containerPort: 4369
            protocol: TCP
          - containerPort: 5671
            protocol: TCP
          - containerPort: 5672
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 10
- apiVersion: v1
  kind: RoleBinding
  metadata:
    labels:
      application: "${APPLICATION_NAME}"
    name: view
  roleRef:
    name: view
  subjects:
  - kind: ServiceAccount
    name: default
