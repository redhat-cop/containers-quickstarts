namespace: sonarqube
app_name: sonarqube
jenkins_url: http://jenkins:80
upstream_sq_version: 7.9.6-community
sonar_search_java_additional_opts: '-Dnode.store.allow_mmapfs=false'
build_repo: https://github.com/redhat-cop/containers-quickstarts.git
build_ref: master

build:
  FROM_DOCKER_IMAGE: "{{ app_name }}"
  FROM_DOCKER_IMAGE_REGISTRY_URL: docker.io/sonarqube
  FROM_DOCKER_TAG: "{{ upstream_sq_version }}"
  NAME: "{{ app_name }}"
  SOURCE_REPOSITORY_URL: "{{ build_repo }}"
  SOURCE_REPOSITORY_REF: "{{ build_ref }}"
  SOURCE_CONTEXT_DIR: "{{ app_name }}"
postgresql:
  DATABASE_SERVICE_NAME: sonardb
  POSTGRESQL_DATABASE: sonar
  VOLUME_CAPACITY: 5
  POSTGRESQL_PASSWORD: sonar
  POSTGRESQL_USER: sonar
deploy:
  POSTGRES_DATABASE_NAME: "{{ postgresql.POSTGRESQL_DATABASE }}"
  JENKINS_URL: "{{ jenkins_url }}"
  SONAR_SEARCH_JAVA_ADDITIONAL_OPTS: "{{ sonar_search_java_additional_opts }}"

openshift_cluster_content:
- object: Environment Setup
  content:
  - name: Create Projects
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/v1.4.12/project-requests/create-project.yml"
    action: create
    params_from_vars:
      NAMESPACE: "{{ namespace }}"
      NAMESPACE_DISPLAY_NAME: "{{ namespace }}"
    tags:
      - project
- object: Builds
  content:
  - name: sonarqube
    template: "{{ inventory_dir }}/../../build-docker-generic/.openshift/templates/docker-build-template-override-FROM.yml"
    params_from_vars: "{{ build }}"
    namespace: "{{ namespace }}"
    tags:
      - build
- object: Deployments
  content:
  - name: sonarqube
    template: "{{ inventory_dir }}/../.openshift/templates/sonarqube-deployment-template.yml"
    params_from_vars: "{{ deploy }}"
    namespace: "{{ namespace }}"
    tags:
    - deploy
    - deploy-app
  - name: sonarqube-postgresql
    template: "openshift//postgresql-persistent"
    params_from_vars: "{{ postgresql }}"
    namespace: "{{ namespace }}"
    tags:
    - deploy
    - deploy-postgresql
