---
namespace: jenkins-slaves
repository_url: https://github.com/redhat-cop/containers-quickstarts.git
slave_repo_ref: master
templates_repo_ref: v1.4.12

jenkins_slaves:
  build:
    ansible:
      BUILDER_IMAGE_NAME: quay.io/openshift/origin-jenkins-agent-base:4.2
      DOCKERFILE_PATH: Dockerfile
      NAME: jenkins-slave-ansible
      SOURCE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-ansible
      SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    arachni: {}
    erlang: {}
    golang: {}
    gradle: {}
    mongodb: {}
    argocd: {}
    helm: {}
    mvn:
      BUILDER_IMAGE_NAME: quay.io/openshift/origin-jenkins-agent-maven:4.2
    npm:
      BUILDER_IMAGE_NAME: openshift/jenkins-slave-base-centos7:v3.11
    python: {}
    ruby: {}
    zap:
      BUILDER_IMAGE_NAME: centos:centos7

test_pipelines:
  deploy:
    ansible:
      NAME: jenkins-slave-ansible
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-ansible
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    erlang:
      NAME: jenkins-slave-erlang
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-erlang
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    golang:
      NAME: jenkins-slave-golang
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-golang
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    mvn:
      NAME: jenkins-slave-mvn
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-mvn
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    ruby:
      NAME: jenkins-slave-ruby
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-ruby
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"
    argocd:
      NAME: jenkins-slave-argocd
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-argocd
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"      
    helm:
      NAME: jenkins-slave-helm
      PIPELINE_CONTEXT_DIR: jenkins-slaves/jenkins-slave-helm
      PIPELINE_FILENAME: Jenkinsfile.test
      PIPELINE_SOURCE_REPOSITORY_REF: "{{ slave_repo_ref }}"
      PIPELINE_SOURCE_REPOSITORY_URL: "{{ repository_url }}"      

openshift_cluster_content:
- object: Environment Setup
  content:
  - name: Create Projects
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/project-requests/create-project.yml"
    action: create
    params_from_vars:
      NAMESPACE: "{{ namespace }}"
      NAMESPACE_DESCRIPTION: "{{ namespace }}"
      NAMESPACE_DISPLAY_NAME: "{{ namespace }}"
    tags:
      - project
- object: jenkins-ephemeral
  content:
  - name: jenkins-ephemeral
    template: 'openshift//jenkins-ephemeral'
    namespace: "{{ namespace }}"
    tags:
      - jenkins-ephemeral
- object: jenkins-slave-nodes
  content:
  - name: jenkins-slaves
    template: "{{ inventory_dir }}/../.openshift/templates/jenkins-slave-generic-template.j2"
    params_from_vars: "{{ jenkins_slaves.build }}"
    namespace: "{{ namespace }}"
    tags:
      - jenkins-slaves
- object: test-pipelines
  content:
  - name: Deploy ansible-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.ansible }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - ansible-slave-pipeline
  - name: Deploy erlang-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.erlang }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - erlang-slave-pipeline
  - name: Deploy golang-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.golang }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - golang-slave-pipeline
  - name: Deploy mvn-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.mvn }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - mvn-slave-pipeline
  - name: Deploy ruby-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.ruby }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - ruby-slave-pipeline
  - name: Deploy argocd-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.argocd }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - argocd-slave-pipeline
  - name: Deploy helm-slave test pipelines
    template: "https://raw.githubusercontent.com/redhat-cop/openshift-templates/{{ templates_repo_ref }}/jenkins-pipelines/jenkins-pipeline-template-no-ocp-triggers.yml"
    params_from_vars: "{{ test_pipelines.deploy.helm }}"
    namespace: "{{ namespace }}"
    tags:
      - test-pipelines
      - helm-slave-pipeline
