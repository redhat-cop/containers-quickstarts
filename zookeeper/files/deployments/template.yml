apiVersion: v1
kind: Template
labels:
  template: zookeeper
metadata:
  annotations:
    description: Zookeeper Deployment and Runtime Components
    iconClass: icon-java
    tags: java,zookeeper
  name: zookeeper
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-headless
  spec:
    clusterIP: None
    portalIP: None
    ports:
    - name: server
      port: 2888
      protocol: TCP
      targetPort: 2888
    - name: leader-election
      port: 3888
      protocol: TCP
      targetPort: 3888
    selector:
      application: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: 2181
    selector:
      application: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  data:
    client.cnxns: "60"
    init: "10"
    jvm.heap: 2G
    purge.interval: "0"
    snap.retain: "3"
    sync: "5"
    tick: "2000"
  kind: ConfigMap
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-config
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 3
    selector:
      matchLabels:
        application: ${APPLICATION_NAME}
    serviceName: ${APPLICATION_NAME}-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: ${APPLICATION_NAME}
      spec:
        containers:
        - command:
          - sh
          - -c
          - bin/zkGenConfig.sh && bin/zkServer.sh start-foreground
          env:
          - name: ZK_REPLICAS
            value: "3"
          - name: ZK_HEAP_SIZE
            valueFrom:
              configMapKeyRef:
                key: jvm.heap
                name: ${APPLICATION_NAME}-config
          - name: ZK_TICK_TIME
            valueFrom:
              configMapKeyRef:
                key: tick
                name: ${APPLICATION_NAME}-config
          - name: ZK_INIT_LIMIT
            valueFrom:
              configMapKeyRef:
                key: init
                name: ${APPLICATION_NAME}-config
          - name: ZK_SYNC_LIMIT
            valueFrom:
              configMapKeyRef:
                key: tick
                name: ${APPLICATION_NAME}-config
          - name: ZK_MAX_CLIENT_CNXNS
            valueFrom:
              configMapKeyRef:
                key: client.cnxns
                name: ${APPLICATION_NAME}-config
          - name: ZK_SNAP_RETAIN_COUNT
            valueFrom:
              configMapKeyRef:
                key: snap.retain
                name: ${APPLICATION_NAME}-config
          - name: ZK_PURGE_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: purge.interval
                name: ${APPLICATION_NAME}-config
          - name: ZK_CLIENT_PORT
            value: "2181"
          - name: ZK_SERVER_PORT
            value: "2888"
          - name: ZK_ELECTION_PORT
            value: "3888"
          image: "${APPLICATION_NAME}:${ZOOKEEPER_VERSION}"
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - bin/zkOk.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 2181
            name: client
            protocol: TCP
          - containerPort: 2888
            name: server
            protocol: TCP
          - containerPort: 3888
            name: leader-election
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/zookeeper/bin/zkOk.sh
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 256m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/zookeeper
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    volumeClaimTemplates:
    - metadata:
        labels:
          application: ${APPLICATION_NAME}
        name: datadir
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: zookeeper
- description: Zookeeper ImageStream Tag
  name: ZOOKEEPER_VERSION
  required: true
  value: 3.4.11
